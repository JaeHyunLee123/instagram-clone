// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma/client"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  content String
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email        String  @unique
  password     String? // 소셜 로그인 시 null 가능
  nickname     String
  profileImage String? // 기본 이미지 처리 가능

  accounts Account[] // 소셜 로그인 정보와 연결
}

//소셜 로그인용
model Account {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  provider          String // 예: 'github'
  providerAccountId String // GitHub user id
  userId            String
  user              User   @relation(fields: [userId], references: [id])

  accessToken    String? // 선택적으로 저장
  refreshToken   String? // 선택적으로 저장
  tokenExpiresAt DateTime? // 선택적으로 저장

  @@unique([provider, providerAccountId])
}
